{"version":3,"sources":["models/exam_list.ts"],"names":["__webpack_exports__","namespace","state","_examArr","_currPage","reducers","changeExam","_a","_b","payload","data","currPage","__assign","concat","emptyExam","reduceCurrPage","_curragePage","effects","queryExam","call","put","select","initSwitch","localStorage","getItem","result","JSON","parse","type","_c","sent","index","__WEBPACK_IMPORTED_MODULE_0__services__","exams","console","log","err_1","Promise","reject"],"mappings":"q5CAEeA,EAAA,SACXC,UAAW,YACXC,OACIC,YACAC,UAAW,GAEfC,UACIC,WAAY,SAACJ,EAAYK,OAACC,EAAAD,EAAAE,QAAUC,EAAAF,EAAAE,KAAMC,EAAAH,EAAAG,SAEtC,OAAAC,KACOV,GACHC,SAAcD,EAAMC,SAAQU,OAAKH,GACjCN,UAAWO,EAAW,KAG9BG,UAAW,SAACZ,GACR,OAAAU,KACOV,GACHC,eAIRY,eAAgB,SAACb,GACb,OAAAU,KACOV,GACHE,UAAkC,IAAvBF,EAAMc,aAAqB,EAAId,EAAME,UAAY,MAIxEa,SACMC,UAAS,SAACX,EAAgBC,mBAAfC,EAAAF,EAAAE,QAAgBU,EAAAX,EAAAW,KAAMC,EAAAZ,EAAAY,IAAKZ,EAAAa,uFAE5BX,KAAmBC,EAAwBF,EAAOE,SAArBW,EAAcb,EAAOa,WAGlDC,aAAaC,QAAQ,aAEjBC,EAAcF,aAAaC,QAAQ,YAEvCd,EAAOgB,KAAKC,MAAMF,WAJlB,mBAOIH,GAEA,EAAMF,GACFQ,KAAM,gBAHV,YAEAC,EAAAC,OAGSC,EAAQ,0BAAGA,GAASpB,GACP,EAAMQ,EAAKa,EAAA,GAAYrB,SAAUoB,MADlB,YAC7BN,EAAcI,EAAAC,OAClBpB,EAAWA,EAAIG,OAAKY,EAAOQ,+BAFQF,oCAKrB,SAAMZ,EAAKa,EAAA,EAAWvB,WAApCgB,EAAcI,EAAAC,OAClBpB,EAAOe,EAAOQ,uBAMtB,SAAMb,GACFQ,KAAM,aACNnB,SACIC,KAAIA,EACJC,SAAQA,qBAJhBkB,EAAAC,sBAUA,kBADAI,QAAQC,IAAI,UAAUC,IACtB,EAAOC,QAAQC,OAAOF","file":"static/js/7.6de37a8e.chunk.js","sourcesContent":["import {gain_exam} from \"../services\";\r\n\r\nexport default {\r\n    namespace: 'exam_list',\r\n    state: {\r\n        _examArr: [],//考试列表\r\n        _currPage: 1,//页码\r\n    },\r\n    reducers: {\r\n        \"changeExam\"(state: any, {payload: {data, currPage}}: any) {\r\n\r\n            return {\r\n                ...state,\r\n                _examArr: [...state._examArr, ...data],\r\n                _currPage: currPage + 1,\r\n            }\r\n        },\r\n        \"emptyExam\"(state: any) {\r\n            return {\r\n                ...state,\r\n                _examArr: [],\r\n\r\n            }\r\n        },\r\n        \"reduceCurrPage\"(state: any) {\r\n            return {\r\n                ...state,\r\n                _currPage: state._curragePage === 1 ? 1 : state._currPage - 1\r\n            }\r\n        }\r\n    },\r\n    effects: {\r\n        * queryExam({payload}: any, {call, put, select}: any) {\r\n            try {\r\n                let data: any[] = [], {currPage, initSwitch} = payload;//initSwitch:true(初始请求)||false(上拉加载请求)\r\n\r\n                //检验是否有缓存\r\n                if (localStorage.getItem(\"examList\")) {\r\n                    //去缓存里面的数据\r\n                    let result: any = localStorage.getItem(\"examList\");\r\n\r\n                    data = JSON.parse(result);\r\n                } else {\r\n                    //请求接口，将数据存到缓存里面\r\n                    if (initSwitch) {\r\n                        //先清空state里面的数组\r\n                        yield put({\r\n                            type: \"emptyExam\"\r\n                        });\r\n                        for (let index = 1; index <= currPage; index++) {\r\n                            let result: any = yield call(gain_exam, {currPage: index});\r\n                            data = [...data, ...result.exams];\r\n                        }\r\n                    } else {\r\n                        let result: any = yield call(gain_exam, payload);\r\n                        data = result.exams;\r\n                    }\r\n\r\n                    //将\"exam_list\"作为key进行缓存\r\n                    // localStorage.setItem(\"examList\", JSON.stringify(data));\r\n                }\r\n                yield put({\r\n                    type: 'changeExam',\r\n                    payload: {\r\n                        data,\r\n                        currPage\r\n                    }\r\n                })\r\n\r\n            } catch (err) {\r\n                console.log(`err is ${err}`);\r\n                return Promise.reject(err);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/exam_list.ts"],"sourceRoot":""}